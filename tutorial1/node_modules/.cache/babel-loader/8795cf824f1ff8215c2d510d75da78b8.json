{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadeem.bernard\\\\Documents\\\\GitHub\\\\reactDevelopment\\\\tutorial1\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Testing from './testing'; //statelsess functional component \n//AKA Dumb components  because there  is no state\n//JSX Rules below\n\n/*\nconst Greeting = () =>{\n  return React.createElement('h1',{},'The Dico is Boring this way')\n}\n*/\n//Normally called app and then only the main module is rendered.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Greeting() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello Choas Coding Class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Message from  the grave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Testing, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Greeting;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n/*\nJSX Rules \n--return a single JSX element with nested elements that follow \n--HTML semantics, section, article, OR react fragment <></> ..etc better practice\n--use camelCase for html sttribute\n--className instead of class\n--close every element <img/> <input> <br><hr> \n--formatting return statement for opening tag or ();\n*/\n//Nested components\n\nconst Person = () => {\n  /*#__PURE__*/\n  _jsxDEV(\"h2\", {\n    children: \"Luca Graves\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 21\n  }, this);\n};\n\n_c2 = Person;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Greeting\");\n$RefreshReg$(_c2, \"Person\");","map":{"version":3,"sources":["C:/Users/khadeem.bernard/Documents/GitHub/reactDevelopment/tutorial1/src/index.js"],"names":["React","ReactDOM","Testing","Greeting","render","document","getElementById","Person"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAsB,WAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,SAASC,QAAT,GAAmB;AACjB,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;KAZQA,Q;AAeTF,QAAQ,CAACG,MAAT,eAAgB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,MAAM,GAAG,MAAI;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqB,CAAzC;;MAAMA,M","sourcesContent":["import React from 'react'\nimport ReactDOM  from 'react-dom';\nimport Testing from './testing';\n//statelsess functional component \n//AKA Dumb components  because there  is no state\n//JSX Rules below\n/*\nconst Greeting = () =>{\n  return React.createElement('h1',{},'The Dico is Boring this way')\n}\n*/\n//Normally called app and then only the main module is rendered.\nfunction Greeting(){\n  return (\n    <>\n      <div>\n        <h3>Hello Choas Coding Class</h3>\n        <Person/>\n        <p>Message from  the grave</p>\n        <Testing/>\n      </div> \n    </>\n   \n  );\n}\n\n\nReactDOM.render(<Greeting/>,document.getElementById('root'));\n\n\n/*\nJSX Rules \n--return a single JSX element with nested elements that follow \n--HTML semantics, section, article, OR react fragment <></> ..etc better practice\n--use camelCase for html sttribute\n--className instead of class\n--close every element <img/> <input> <br><hr> \n--formatting return statement for opening tag or ();\n*/\n\n//Nested components\nconst Person = ()=>{<h2>Luca Graves</h2>}"]},"metadata":{},"sourceType":"module"}