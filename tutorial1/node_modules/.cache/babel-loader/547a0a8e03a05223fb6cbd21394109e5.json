{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadeem.bernard\\\\Documents\\\\GitHub\\\\reactDevelopment\\\\tutorial1\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Testing from './testing'; //statelsess functional component \n//AKA Dumb components  because there  is no state\n//JSX Rules below\n\n/*\nconst Greeting = () =>{\n  return React.createElement('h1',{},'The Disco is Boring this way')\n}\n*/\n//Normally called app and then only the main module is rendered.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Greeting() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello Choas Coding Class\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Testing, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n/*\nJSX Rules \n--return a single JSX element with nested elements that follow \n--HTML semantics, section, article, OR react fragment <></> ..etc better practice\n--use camelCase for html attribute\n--className instead of class\n--close every element <img/> <input/> <br/><hr/> \n--formatting return statement for opening tag or ();\n*/\n//Nested components\n\n\n_c = Greeting;\n\nconst Person = () => /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: \"Luca Graves\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 20\n}, this);\n\n_c2 = Person;\n\nconst Message = () => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: \"Message from    the graveZ\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 21\n}, this); //View component field under page inspection\n\n\n_c3 = Message;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Greeting\");\n$RefreshReg$(_c2, \"Person\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"sources":["C:/Users/khadeem.bernard/Documents/GitHub/reactDevelopment/tutorial1/src/index.js"],"names":["React","ReactDOM","Testing","Greeting","Person","Message","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAsB,WAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,GAAmB;AACjB,sBACI;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;KApBSA,Q;;AAqBT,MAAMC,MAAM,GAAG,mBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;;MAAMA,M;;AACN,MAAMC,OAAO,GAAG,mBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApB,C,CACA;;;MADMA,O;AAENJ,QAAQ,CAACK,MAAT,eAAgB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React from 'react'\nimport ReactDOM  from 'react-dom';\nimport Testing from './testing';\n//statelsess functional component \n//AKA Dumb components  because there  is no state\n//JSX Rules below\n/*\nconst Greeting = () =>{\n  return React.createElement('h1',{},'The Disco is Boring this way')\n}\n*/\n//Normally called app and then only the main module is rendered.\nfunction Greeting(){\n  return (\n      <div>\n        <h3>Hello Choas Coding Class</h3>\n        <Person/>\n        <Message/>\n        <Testing/>\n      </div> \n  );\n}\n/*\nJSX Rules \n--return a single JSX element with nested elements that follow \n--HTML semantics, section, article, OR react fragment <></> ..etc better practice\n--use camelCase for html attribute\n--className instead of class\n--close every element <img/> <input/> <br/><hr/> \n--formatting return statement for opening tag or ();\n*/\n\n//Nested components\nconst Person = ()=><h2>Luca Graves</h2>;\nconst Message = ()=><p>Message from    the graveZ</p>;\n//View component field under page inspection\nReactDOM.render(<Greeting/>,document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}